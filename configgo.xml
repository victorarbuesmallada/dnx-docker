<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="78">
  <server artifactsdir="artifacts" siteUrl="http://localhost:8154/" purgeStart="8.0" purgeUpto="20.0" jobTimeout="60" commandRepositoryLocation="default" serverId="e741b4de-0bb4-448e-9425-79178a108020">
    <security>
      <passwordFile path="/etc/go/config/htpasswd" />
      <roles>
        <role name="PipelineAdmin">
          <users>
            <user>sgadge</user>
          </users>
        </role>
        <role name="GoUser">
          <users>
            <user>bridge</user>
            <user>parag</user>
            <user>ravindra_jain</user>
            <user>sachin</user>
          </users>
        </role>
        <role name="WebServices">
          <users>
            <user>parag</user>
            <user>ravindra_jain</user>
            <user>sachin</user>
          </users>
        </role>
        <role name="Android">
          <users>
            <user>parag</user>
            <user>ravindra_jain</user>
            <user>sachin</user>
          </users>
        </role>
        <role name="Kcpe">
          <users>
            <user>parag</user>
          </users>
        </role>
      </roles>
      <admins>
        <user>sgadge</user>
        <user>kent.mcneill@bridgeinternationalacademies.com</user>
        <user>rehan.saeed@bridgeinternationalacademies.com</user>
        <user>chris.tamlyn@bridgeinternationalacademies.com</user>
        <user>bridge_ci</user>
      </admins>
    </security>
  </server>
  <pipelines group="test">
    <pipeline name="testpipeline">
      <materials>
        <git url="https://bridge_ci:KCvxr5X7@bitbucket.org/bridgeinternationalacademies/Bridge.net.git" />
      </materials>
      <stage name="defaultStage">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="echo">
                <arg>1</arg>
              </exec>
            </tasks>
            <resources>
              <resource>Bridge.AppLogging.Client</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <templates>
    <pipeline name="dotnet46">
      <stage name="build" cleanWorkingDir="true">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>.\nugetrestore.ps1</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\Microsoft.NET\Framework64\v4.0.30319\MsBuild.exe" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>#{PROJECT_NAME}.csproj</arg>
                <arg>/T:rebuild</arg>
                <arg>/P:Configuration=Release</arg>
                <arg>/m</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet4.6</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="test">
        <jobs>
          <job name="test">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>.\nugetrestore.ps1</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\Microsoft.NET\Framework64\v4.0.30319\MsBuild.exe" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>.\#{UNIT_TEST_PROJECT}\#{UNIT_TEST_PROJECT}.csproj</arg>
                <arg>/T:rebuild</arg>
                <arg>/P:Configuration=Release</arg>
                <arg>/m</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>/c</arg>
                <arg>.\packages\NUnit.Runners.2.6.4\tools\nunit-console.exe</arg>
                <arg>.\#{UNIT_TEST_PROJECT}\bin\Release\#{UNIT_TEST_PROJECT}.dll</arg>
                <arg>/xml:results.xml</arg>
                <arg>/include:Unit</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet4.6</resource>
            </resources>
            <artifacts>
              <test src="#{SOLUTION_DIRECTORY}/results.xml" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="publish" fetchMaterials="false">
        <jobs>
          <job name="publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>.\nugetrestore.ps1</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\Microsoft.NET\Framework64\v4.0.30319\MsBuild.exe" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>#{PROJECT_NAME}.csproj</arg>
                <arg>/T:rebuild</arg>
                <arg>/P:Configuration=Release</arg>
                <arg>/m</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.dll</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.xml</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.config</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip index.html</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.asmx</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.aspx</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.asax</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.resx</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.ico</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.txt</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.js *.css *.png *.svg *.jpg *.html *.gif *.cshtml *.xlsx *.xslt</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>curl -v -u continuous.delivery:KCvxr5X7 --upload-file #{CHOCOLATEY_PACKAGE_NAME}.zip http://10.0.20.35/content/repositories/releases/#{CHOCOLATEY_PACKAGE_NAME}/#{CHOCOLATEY_PACKAGE_NAME}-%GO_PIPELINE_LABEL%.zip</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="publish_chocolatey" fetchMaterials="false">
        <jobs>
          <job name="publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}\publish.ps1 #{SOLUTION_DIRECTORY} #{TYPE} #{PROJECT_NAME} #{CHOCOLATEY_PACKAGE_NAME} %GO_PIPELINE_LABEL% #{SERVER_PORT} #{HTTP_PORT} #{IIS_HOST_NAME}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="#{SOLUTION_DIRECTORY}/packages/Bridge.Publish.*/scripts/**" dest="publishScripts" />
              <artifact src="#{SOLUTION_DIRECTORY}/#{PROJECT_NAME}/install.ps1" dest="bootstrap" />
              <artifact src="#{SOLUTION_DIRECTORY}/#{PROJECT_NAME}/install_filesystem_dependencies.ps1" dest="bootstrap" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="dotnet">
      <stage name="build" cleanWorkingDir="true">
        <jobs>
          <job name="build">
            <tasks>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>/c</arg>
                <arg>nuget restore</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\Microsoft.NET\Framework64\v4.0.30319\MsBuild.exe" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>#{PROJECT_NAME}.csproj</arg>
                <arg>/T:rebuild</arg>
                <arg>/P:Configuration=Release</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="test">
        <jobs>
          <job name="test">
            <tasks>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>/c</arg>
                <arg>nuget restore</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\Microsoft.NET\Framework64\v4.0.30319\MsBuild.exe" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>.\#{UNIT_TEST_PROJECT}\#{UNIT_TEST_PROJECT}.csproj</arg>
                <arg>/T:rebuild</arg>
                <arg>/P:Configuration=Release</arg>
                <arg>/m</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>/c</arg>
                <arg>.\packages\NUnit.Runners.2.6.4\tools\nunit-console.exe</arg>
                <arg>.\#{UNIT_TEST_PROJECT}\bin\Release\#{UNIT_TEST_PROJECT}.dll</arg>
                <arg>/xml:results.xml</arg>
                <arg>/include:Unit</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet</resource>
            </resources>
            <artifacts>
              <test src="#{SOLUTION_DIRECTORY}/results.xml" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="publish" fetchMaterials="false">
        <jobs>
          <job name="publish">
            <tasks>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}">
                <arg>/c</arg>
                <arg>nuget restore</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\Microsoft.NET\Framework64\v4.0.30319\MsBuild.exe" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>#{PROJECT_NAME}.csproj</arg>
                <arg>/T:rebuild</arg>
                <arg>/P:Configuration=Release</arg>
                <arg>/m</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.dll</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.xml</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.config</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip index.html</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.asmx</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.aspx</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.asax</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.resx</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.ico</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.txt</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.js *.css *.png *.svg *.jpg *.html *.gif *.cshtml *.xlsx *.xslt</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}">
                <arg>/c</arg>
                <arg>curl -v -u continuous.delivery:KCvxr5X7 --upload-file #{CHOCOLATEY_PACKAGE_NAME}.zip http://10.0.20.35/content/repositories/releases/#{CHOCOLATEY_PACKAGE_NAME}/#{CHOCOLATEY_PACKAGE_NAME}-%GO_PIPELINE_LABEL%.zip</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="publish_chocolatey" fetchMaterials="false">
        <jobs>
          <job name="publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\#{SOLUTION_DIRECTORY}\#{PROJECT_NAME}\publish.ps1 #{SOLUTION_DIRECTORY} #{TYPE} #{PROJECT_NAME} #{CHOCOLATEY_PACKAGE_NAME} %GO_PIPELINE_LABEL% #{SERVER_PORT} #{HTTP_PORT} #{IIS_HOST_NAME}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="#{SOLUTION_DIRECTORY}/packages/Bridge.Publish.*/scripts/**" dest="publishScripts" />
              <artifact src="#{SOLUTION_DIRECTORY}/#{PROJECT_NAME}/install.ps1" dest="bootstrap" />
              <artifact src="#{SOLUTION_DIRECTORY}/#{PROJECT_NAME}/install_filesystem_dependencies.ps1" dest="bootstrap" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="chocolatey-install">
      <stage name="install" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="install">
            <tasks>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE_NAME}" stage="publish_chocolatey" job="publish" srcdir="publishScripts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE_NAME}" stage="publish_chocolatey" job="publish" srcdir="bootstrap">
                <runif status="passed" />
              </fetchartifact>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\bootstrap\install.ps1 #{CHOCOLATEY_PACKAGE_NAME} #{CHOCOLATEY_PACKAGE_VERSION} #{TARGET_SERVER} #{COUNTRY} #{ENVIRONMENT}</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\bootstrap\install_filesystem_dependencies.ps1 #{CHOCOLATEY_PACKAGE_NAME} #{COUNTRY} #{BASEFOLDER} #{TARGET_SERVER} #{ENVIRONMENT}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="configuration">
      <stage name="publish" cleanWorkingDir="true">
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="cmd">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.config</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.xml</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd">
                <arg>/c 7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.txt</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd">
                <arg>/c curl -v -u continuous.delivery:KCvxr5X7 --upload-file #{CHOCOLATEY_PACKAGE_NAME}.zip http://10.0.20.35/content/repositories/releases/#{CHOCOLATEY_PACKAGE_NAME}/#{CHOCOLATEY_PACKAGE_NAME}-%GO_PIPELINE_LABEL%.zip</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="database">
      <stage name="publish">
        <jobs>
          <job name="publish">
            <tasks>
              <exec command="cmd">
                <arg>/c</arg>
                <arg>7za a -r Bridge.Data\#{CHOCOLATEY_PACKAGE_NAME}.zip *.sql *.xml</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd">
                <arg>/c curl -v -u continuous.delivery:KCvxr5X7 --upload-file Bridge.Data\#{CHOCOLATEY_PACKAGE_NAME}.zip http://10.0.20.35/content/repositories/releases/#{CHOCOLATEY_PACKAGE_NAME}/#{CHOCOLATEY_PACKAGE_NAME}-%GO_PIPELINE_LABEL%.zip</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="publish_chocolatey">
        <jobs>
          <job name="publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\Bridge.Publish\scripts\publish_database.ps1 %GO_PIPELINE_LABEL% #{CHOCOLATEY_PACKAGE_NAME} #{DATABASE_NAME}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="Bridge.Publish/scripts/install_database.ps1" dest="bootstrap" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="chocolatey-install_console">
      <stage name="install" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="install">
            <tasks>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE_NAME}" stage="publish_chocolatey" job="publish" srcdir="publishScripts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE_NAME}" stage="publish_chocolatey" job="publish" srcdir="bootstrap">
                <runif status="passed" />
              </fetchartifact>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\bootstrap\install.ps1 #{CHOCOLATEY_PACKAGE_NAME} #{CHOCOLATEY_PACKAGE_VERSION} #{TARGET_SERVER} #{COUNTRY} #{ENVIRONMENT}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="chocolatey-install_service">
      <stage name="install" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="install">
            <tasks>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE_NAME}" stage="Publish_Chocolatey" job="Publish" srcdir="publishScripts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="#{UPSTREAM_PIPELINE_NAME}" stage="Publish_Chocolatey" job="Publish" srcdir="bootstrap">
                <runif status="passed" />
              </fetchartifact>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\bootstrap\install.ps1 #{CHOCOLATEY_PACKAGE_NAME} #{CHOCOLATEY_PACKAGE_VERSION} #{TARGET_SERVER} #{COUNTRY} #{ENVIRONMENT}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Windows_Service">
      <stage name="Build_Publish" cleanWorkingDir="true">
        <jobs>
          <job name="Build">
            <tasks>
              <exec command="CMD">
                <arg>/c</arg>
                <arg>nuget restore #{SOLUTION_DIRECTORY}</arg>
                <runif status="passed" />
              </exec>
              <exec command="C:\Program Files (x86)\MSBuild\14.0\Bin\MsBuild.exe" workingdir="#{PROJECT_DIRECTORY}">
                <arg>#{PROJECT_NAME}.csproj</arg>
                <arg>/T:rebuild</arg>
                <arg>/P:Configuration=Release</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{PROJECT_DIRECTORY}">
                <arg>/c</arg>
                <arg>7za a -r #{CHOCOLATEY_PACKAGE_NAME}.zip *.dll *.json *.exe</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{PROJECT_DIRECTORY}">
                <arg>/c</arg>
                <arg>curl -v -u continuous.delivery:KCvxr5X7 --upload-file #{CHOCOLATEY_PACKAGE_NAME}.zip http://10.0.20.35/content/repositories/releases/#{CHOCOLATEY_PACKAGE_NAME}/#{CHOCOLATEY_PACKAGE_NAME}-%GO_PIPELINE_LABEL%.zip</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="Publish_Chocolatey" fetchMaterials="false">
        <jobs>
          <job name="Publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>.\#{PROJECT_DIRECTORY}\publish.ps1 '#{SOLUTION_DIRECTORY}' '#{TYPE}' '#{PROJECT_NAME}' '#{CHOCOLATEY_PACKAGE_NAME}' '%GO_PIPELINE_LABEL%' 'null' 'null' 'null' '#{SERVICENAME}' '#{SERVICE_TYPE}' '#{EXEFILENAME}'</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="**/packages/Bridge.Publish.*/scripts/**" dest="publishScripts" />
              <artifact src="#{PROJECT_DIRECTORY}/install.ps1" dest="bootstrap" />
              <artifact src="#{PROJECT_DIRECTORY}/install_filesystem_dependencies.ps1" dest="bootstrap" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="PublishPackage">
      <stage name="Publish" cleanWorkingDir="true">
        <jobs>
          <job name="Publish">
            <tasks>
              <exec command="cmd">
                <arg>/c</arg>
                <arg>nuget pack #{PACKAGE_NAME}.nuspec -Version %GO_PIPELINE_LABEL%</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd">
                <arg>/c</arg>
                <arg>nuget push .\#{PACKAGE_NAME}.%GO_PIPELINE_LABEL%.nupkg d0900328-bc43-3344-9fe5-d581d98f7cd4 -s http://10.0.20.35/service/local/nuget/nuget-releases/</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd">
                <arg>/c</arg>
                <arg>nuget push .\#{PACKAGE_NAME}.%GO_PIPELINE_LABEL%.nupkg -ApiKey #{API_KEY} -Source #{SOURCE}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="AcademyManager_Environment_Build_Publish">
      <stage name="set-environment">
        <jobs>
          <job name="update-config">
            <tasks>
              <exec command="cmd /c android update project -p .">
                <runif status="passed" />
              </exec>
              <ant target="update-config -DCountry.Code=#{COUNTRY_CODE} -DEnv.Type=#{ENV_TYPE} -DVersion.Name=%GO_PIPELINE_LABEL% -DVersion.Code=%GO_PIPELINE_COUNTER%" workingdir="com.bia.bridgedroid.academymanager">
                <runif status="passed" />
              </ant>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="build" fetchMaterials="false">
        <jobs>
          <job name="build">
            <tasks>
              <ant target="clean release" workingdir="com.bia.bridgedroid.academymanager">
                <runif status="passed" />
              </ant>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
            <artifacts>
              <artifact src="com.bia.bridgedroid.academymanager/bin/AcademyManager-release.apk" dest="AcademyManager" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="publish" fetchMaterials="false">
        <jobs>
          <job name="publish">
            <tasks>
              <fetchartifact pipeline="" stage="build" job="build" srcdir="AcademyManager">
                <runif status="passed" />
              </fetchartifact>
              <exec command="cmd" workingdir="AcademyManager">
                <arg>/c curl --verbose --user continuous.delivery:KCvxr5X7 --upload-file AcademyManager-release.apk http://10.0.20.35/content/repositories/releases/com/bridgeinternationalacademies/academymanager/#{COUNTRY_CODE}/#{ENV_TYPE}/%GO_PIPELINE_LABEL%/AcademyManager.apk</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Bridge.ContinuousDelivery.BuildTestPublishRelease">
      <stage name="Build" cleanWorkingDir="true">
        <jobs>
          <job name="Build">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>nuget restore</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Notes.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames @('%GO_PIPELINE_NAME%')</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Build.ps1' } | Select-Object -First 1) -BuildVersion %GO_PIPELINE_LABEL% -VersionTemplate '#{Build-VersionTemplate}' -VersionAssemblies -MSBuild -DotnetBuild -OctoPack -ProjectFileNames #{Build-ProjectFileNames}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
            <artifacts>
              <artifact src="Artifacts/*.nupkg" />
              <artifact src="ReleaseNotes.txt" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Test" fetchMaterials="false" artifactCleanupProhibited="true">
        <jobs>
          <job name="Test">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Test.ps1' } | Select-Object -First 1) -NUnit:$#{Test-UseNUnit} -xUnit:$#{Test-UseXUnit} -ProjectFileNames #{Test-ProjectFileNames} -IncludeTraits #{Test-IncludeTraits} -ExcludeTraits #{Test-ExcludeTraits}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
            <artifacts>
              <test src="TestResults/*.NUnit.xml" />
              <test src="TestResults/*.xUnit.xml" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Publish" fetchMaterials="false" artifactCleanupProhibited="true">
        <jobs>
          <job name="Publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Publish.ps1' } | Select-Object -First 1) -NuGetSource https://deploy.bridgeinternationalacademies.com/nuget/packages -NuGetApiKey API-ZDK9GI4VTABAKTOOGQ9HYSDMC</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="Release" fetchMaterials="false" artifactCleanupProhibited="true">
        <jobs>
          <job name="Release">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Release.ps1' } | Select-Object -First 1) -OctopusUrl https://deploy.bridgeinternationalacademies.com -OctopusApiKey API-ZDK9GI4VTABAKTOOGQ9HYSDMC -OctopusProjectName #{Release-OctopusProjectName} -OctopusEnvironmentNames #{Release-OctopusEnvironmentNames} -CreateRelease -DeployRelease:$#{Release-DeployRelease}</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Go.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames #{Go-GoPipelineNames}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Bridge.ContinuousDelivery.DeployTest">
      <stage name="Deploy" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="Deploy">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>nuget restore</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Release.ps1' } | Select-Object -First 1) -OctopusUrl https://deploy.bridgeinternationalacademies.com -OctopusApiKey API-ZDK9GI4VTABAKTOOGQ9HYSDMC -OctopusProjectName #{Release-OctopusProjectName} -OctopusEnvironmentNames #{Release-OctopusEnvironmentNames} -CreateRelease:$False -DeployRelease:$True</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet4.6.1</resource>
              <resource>#{BuildAgentResource}</resource>
            </resources>
            <artifacts>
              <test src="TestResults/*.NUnit.xml" />
              <test src="TestResults/*.xUnit.xml" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Test" fetchMaterials="false" artifactCleanupProhibited="true">
        <jobs>
          <job name="Test">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Test.ps1' } | Select-Object -First 1) -NUnit:$#{Test-UseNUnit} -xUnit:$#{Test-UseXUnit} -ProjectFileNames #{Test-ProjectFileNames} -IncludeTraits #{Test-IncludeTraits} -ExcludeTraits #{Test-ExcludeTraits} -BuildConfiguration #{Test-BuildConfiguration}</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Go.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames #{Go-GoPipelineNames}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet4.6.1</resource>
              <resource>#{BuildAgentResource}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Bridge.ContinuousDelivery.Test">
      <stage name="Test" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="Test">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>nuget restore</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Test.ps1' } | Select-Object -First 1) -NUnit:$#{Test-UseNUnit} -xUnit:$#{Test-UseXUnit} -ProjectFileNames #{Test-ProjectFileNames} -IncludeTraits #{Test-IncludeTraits} -ExcludeTraits #{Test-ExcludeTraits} -BuildConfiguration #{Test-BuildConfiguration}</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Go.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames #{Go-GoPipelineNames}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>dotnet4.6.1</resource>
              <resource>#{BuildAgentResource}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Bridge.ContinuousDelivery.PackPublish">
      <stage name="Pack" cleanWorkingDir="true">
        <jobs>
          <job name="Pack">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>nuget install Bridge.ContinuousDelivery -source http://54.154.214.5/service/local/nuget/nuget-releases/</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>Remove-Item (Get-ChildItem -Filter *.nupkg -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*.nupkg' } | Select-Object -First 1)</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Notes.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames @('%GO_PIPELINE_NAME%')</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Pack.ps1' } | Select-Object -First 1) -NuspecFileNames #{Pack-NuspecFileNames} -ExcludeFilePaths #{Pack-ExcludeFilePaths} -BuildVersion %GO_PIPELINE_LABEL% -SemanticVersioning:$#{Pack-SemanticVersioning}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
            <artifacts>
              <artifact src="**/*.nupkg" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Publish" fetchMaterials="false" artifactCleanupProhibited="true">
        <jobs>
          <job name="Publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Publish.ps1' } | Select-Object -First 1) -NuGetSource #{Publish-NuGetSource} -NuGetApiKey #{Publish-NuGetApiKey} -NuGetPackagesSearchPath '*.nupkg'</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Go.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames #{Go-GoPipelineNames}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Bridge.ContinuousDelivery.PackPublishRelease">
      <stage name="Pack" cleanWorkingDir="true">
        <jobs>
          <job name="Pack">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>nuget install Bridge.ContinuousDelivery -source http://54.154.214.5/service/local/nuget/nuget-releases/</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>Remove-Item (Get-ChildItem -Filter *.nupkg -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*.nupkg' } | Select-Object -First 1)</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Notes.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames @('%GO_PIPELINE_NAME%')</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Pack.ps1' } | Select-Object -First 1) -NuspecFileNames #{Pack-NuspecFileNames} -ExcludeFilePaths #{Pack-ExcludeFilePaths} -BuildVersion %GO_PIPELINE_LABEL% -SemanticVersioning:$#{Pack-SemanticVersioning}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
            <artifacts>
              <artifact src="**/*.nupkg" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Publish" fetchMaterials="false" artifactCleanupProhibited="true">
        <jobs>
          <job name="Publish">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Publish.ps1' } | Select-Object -First 1) -NuGetSource #{Publish-NuGetSource} -NuGetApiKey #{Publish-NuGetApiKey} -NuGetPackagesSearchPath '*.nupkg'</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="Release" fetchMaterials="false" artifactCleanupProhibited="true">
        <jobs>
          <job name="Release">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Release.ps1' } | Select-Object -First 1) -OctopusUrl https://deploy.bridgeinternationalacademies.com -OctopusApiKey API-ZDK9GI4VTABAKTOOGQ9HYSDMC -OctopusProjectName #{Release-OctopusProjectName} -OctopusEnvironmentNames #{Release-OctopusEnvironmentNames} -CreateRelease -DeployRelease:$#{Release-DeployRelease}</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Go.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames #{Go-GoPipelineNames}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BuildAgentResource}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Angular_InstallTestPublishRelease">
      <stage name="Install" cleanWorkingDir="true">
        <jobs>
          <job name="install">
            <tasks>
              <exec command="cmd" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>/c</arg>
                <arg>npm install</arg>
                <runif status="passed" />
              </exec>
              <exec command="cmd" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>/c</arg>
                <arg>node_modules\.bin\gulp</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="Test" fetchMaterials="false">
        <jobs>
          <job name="test">
            <tasks>
              <exec command="cmd" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>/c</arg>
                <arg>node_modules\.bin\gulp test</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="Publish" fetchMaterials="false">
        <jobs>
          <job name="publish">
            <tasks>
              <exec command="cmd" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>/c</arg>
                <arg>node_modules\.bin\gulp build</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>&amp; (Get-ChildItem ..\*.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\bridge.continuousdelivery*' -and $_ -like '*\Tools\Notes.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames %GO_PIPELINE_NAME%</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>nuget pack #{PACKAGE_NAME}.nuspec -Version %GO_PIPELINE_LABEL%</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>nuget push .\#{PACKAGE_NAME}.%GO_PIPELINE_LABEL%.nupkg d0900328-bc43-3344-9fe5-d581d98f7cd4 -s http://10.0.20.35/service/local/nuget/nuget-releases/</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>nuget push .\#{PACKAGE_NAME}.%GO_PIPELINE_LABEL%.nupkg -ApiKey #{API_KEY} -Source #{SOURCE}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="Release" fetchMaterials="false">
        <jobs>
          <job name="Release">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe" workingdir="#{ANGULAR-PROJECT-WORKING-DIRECTORY}">
                <arg>&amp; (Get-ChildItem ..\*.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\bridge.continuousdelivery*' -and $_ -like '*\Tools\Release.ps1' } | Select-Object -First 1) -OctopusUrl #{OCTOPUS-URL} -OctopusApiKey #{API_KEY} -OctopusProjectName #{RELEASE-OCTOPUSPROJECTNAME} -OctopusEnvironmentNames #{RELEASE-OCTOPUSENVIRONMENTNAMES} -CreateRelease -DeployRelease:$#{RELEASE-DEPLOYRELEASE}</arg>
                <runif status="passed" />
              </exec>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem ..\*.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Bridge.Continuous*' -and $_ -like '*\Tools\Go.ps1' } | Select-Object -First 1) -GoUrl 'http://build.bridgeinternationalacademies.com:8153' -GoUsername 'bridge_ci' -GoPassword 'Welcome123' -GoPipelineNames #{GO-GOPIPELINENAMES}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Angular_Deploy">
      <stage name="Deploy">
        <approval type="manual" />
        <jobs>
          <job name="Deploy">
            <tasks>
              <exec command="%Windir%\sysnative\WindowsPowerShell\v1.0\powershell.exe">
                <arg>&amp; (Get-ChildItem -Filter *.ps1 -Recurse | ForEach-Object { $_.FullName } | Where { $_ -like '*\Tools\Release.ps1' } | Select-Object -First 1) -OctopusUrl #{OCTOPUS-URL} -OctopusApiKey #{API_KEY} -OctopusProjectName #{RELEASE-OCTOPUSPROJECTNAME} -OctopusEnvironmentNames #{RELEASE-OCTOPUSENVIRONMENTNAMES} -CreateRelease:$#{RELEASE-CREATERELEASE} -DeployRelease:$#{RELEASE-DEPLOYRELEASE}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT-RESOURCES}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="TeacherTech_Environment_Build_Publish">
      <stage name="set-environment">
        <jobs>
          <job name="update-config">
            <tasks>
              <exec command="cmd /c android update project -p ." workingdir="com.bia.tt">
                <runif status="passed" />
              </exec>
              <ant buildfile="build.xml" target="prepare" workingdir="com.bia.tt">
                <runif status="passed" />
              </ant>
              <ant buildfile="build.xml" target="update-config -DCountry.Code=#{COUNTRY_CODE} -DEnv.Type=#{ENV_TYPE} -DVersion.Name=%GO_PIPELINE_LABEL% -DVersion.Code=%GO_PIPELINE_COUNTER%" workingdir="com.bia.tt">
                <runif status="passed" />
              </ant>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="build" fetchMaterials="false">
        <jobs>
          <job name="build">
            <tasks>
              <ant buildfile="build.xml" target="clean release" workingdir="com.bia.tt" />
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
            <artifacts>
              <artifact src="com.bia.tt/bin/TeacherTech-release.apk" dest="TeacherTech" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="publish" fetchMaterials="false">
        <jobs>
          <job name="publish">
            <tasks>
              <fetchartifact pipeline="" stage="build" job="build" srcdir="TeacherTech">
                <runif status="passed" />
              </fetchartifact>
              <exec command="cmd" workingdir="TeacherTech">
                <arg>/c curl --verbose --user continuous.delivery:KCvxr5X7 --upload-file TeacherTech-release.apk http://10.0.20.35/content/repositories/releases/com/bia/tt/#{COUNTRY_CODE}/#{ENV_TYPE}/%GO_PIPELINE_LABEL%/TeacherTech.apk</arg>
              </exec>
            </tasks>
            <resources>
              <resource>#{BUILD-AGENT_RESOURCE}</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <environments>
    <environment name="test-env">
      <agents>
        <physical uuid="8be8e0d3-9c80-4616-a475-194cf62221b4" />
      </agents>
      <pipelines>
        <pipeline name="testpipeline" />
      </pipelines>
    </environment>
  </environments>
  <agents>
    <agent hostname="ubuntu" ipaddress="10.0.2.15" uuid="8be8e0d3-9c80-4616-a475-194cf62221b4">
      <resources>
        <resource>Bridge.AppLogging.Client</resource>
      </resources>
    </agent>
  </agents>
</cruise>

